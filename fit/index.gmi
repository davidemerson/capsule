```
 .----------------.  .----------------.  .----------------. 
| .--------------. || .--------------. || .--------------. |
| |  _________   | || |     _____    | || |  _________   | |
| | |_   ___  |  | || |    |_   _|   | || | |  _   _  |  | |
| |   | |_  \_|  | || |      | |     | || | |_/ | | \_|  | |
| |   |  _|      | || |      | |     | || |     | |      | |
| |  _| |_       | || |     _| |_    | || |    _| |_     | |
| | |_____|      | || |    |_____|   | || |   |_____|    | |
| |              | || |              | || |              | |
| '--------------' || '--------------' || '--------------' |
 '----------------'  '----------------'  '----------------' 

```
# a personal productivity tool

```
she went walking when the fit took her:
mood, whim, fancy, impulse, caprice, urge,
notion, whimsy; desire, wish, inclination, bent.
```

=> gemini://nnix.com/gemlog/8.gmi This is why I'm making fit.

=> https://github.com/davidemerson/fit GitHub

## Features
* [done] Must be able to count up to time work of indefinite duration.
* [done] Must be able to count down to time work of definite (or bounded) duration, like a Pomodoro. This count down will be limited to 30min (a single) and 60min (a double) intervals.
* [done] Should be able to categorize work and log time spent by category. Categories need not be extensive. This can be as high-level as GTD Focus Horizons.
* Though the code will be portable, I'll be using a physical device which has no function other than the "fit" routine. This device will also be called "fit". It should be small, substantial, and good looking - something I don't mind carrying and looking at regularly (honestly, this is why the kitchen timer isn't good enough).

## fit device
* Battery powered, with a really long life (low consumption) so it's not a hassle to use without power.
* I wanted to use a pi pico, but they were sold out (well, the tiny 2040 I wanted was sold out), and they don't have wifi just yet. I need wifi for this to be practical at the moment.
* wifi for sync to a central database.
* eInk or OLED screen for low power consumption.
* robust enclosure, this needs to travel well and be abused.
* tactility and finish; use should be a satisfying experience.
* rotary encoder or cherry MX switches for interface.

## fit application
* can be invoked as an application in any posix shell "fit -ffp -ft30"
* graphical representations of time "progress bar"

### data model
Each invocation is a fit, stored in the fDB as a table of "fits". Every fit will consist of the following values:
* focus[fFocus] : personal[ffp], work[ffw], learning[ffl]
* type[fType] : 60-minute[ft60], 30-minute[ft30], count-up[ftcu]
* hash[fHash] : md5(fEnd)
* hash_short[fHash_short] : fHash[0:5] (used for naming only)
* start[fStart] : (epoch at start)
* end[fEnd] : (epoch at end)
* duration[fDuration] : (fEnd-fStart)
* survey[fSurvey] : +[fsgood], =[fsok], -[fsbad]

### use
[press] >> ffp, ffw, ffl >> [press] >> ftcu, ft60, ft30 >> [press] >> (displays epoch from start) >> [press] >> (epoch paused) >> [press] >> (epoch resumed) >> [long press | interval elapsed] >> survey >> log .